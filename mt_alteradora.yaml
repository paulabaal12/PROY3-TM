# Lista de estados
q_states:
  q_list:
  - 'q0'
  - 'q1'
  - 'q2'
  - 'q3'
  - 'q4'
  - 'q5'
  - 'q6'
  initial: 'q0'
  final: 'q6'

# Alfabetos de la MT
alphabet:
- a
- b
tape_alphabet:
- X
- a
- b

# Función de transición
delta:
  - params:
      initial_state: 'q0'
      mem_cache_value:
      tape_input: 'a'
    output:
      final_state: 'q0'
      mem_cache_value:
      tape_output: 'a'
      tape_displacement: R

  - params:
      initial_state: 'q0'
      mem_cache_value:
      tape_input: 'b'
    output:
      final_state: 'q0'
      mem_cache_value:
      tape_output: 'b'
      tape_displacement: R

  - params:
      initial_state: 'q0'
      mem_cache_value:
      tape_input: '_'
    output:
      final_state: 'q1'
      mem_cache_value:
      tape_output: '_'
      tape_displacement: L

  - params:
      initial_state: 'q2'
      mem_cache_value:
      tape_input: 'a'
    output:
      final_state: 'q2'
      mem_cache_value:
      tape_output: 'a'
      tape_displacement: R

  - params:
      initial_state: 'q2'
      mem_cache_value:
      tape_input: 'b'
    output:
      final_state: 'q2'
      mem_cache_value:
      tape_output: 'b'
      tape_displacement: R

  - params:
      initial_state: 'q2'
      mem_cache_value:
      tape_input: 'X'
    output:
      final_state: 'q2'
      mem_cache_value:
      tape_output: 'X'
      tape_displacement: R

  - params:
      initial_state: 'q2'
      mem_cache_value:
      tape_input: '_'
    output:
      final_state: 'q4'
      mem_cache_value:
      tape_output: 'a'
      tape_displacement: L

  - params:
      initial_state: 'q1'
      mem_cache_value:
      tape_input: 'X'
    output:
      final_state: 'q1'
      mem_cache_value:
      tape_output: 'X'
      tape_displacement: L

  - params:
      initial_state: 'q1'
      mem_cache_value:
      tape_input: 'a'
    output:
      final_state: 'q2'
      mem_cache_value:
      tape_output: 'X'
      tape_displacement: R

  - params:
      initial_state: 'q1'
      mem_cache_value:
      tape_input: '_'
    output:
      final_state: 'q5'
      mem_cache_value:
      tape_output: '_'
      tape_displacement: R

  - params:
      initial_state: 'q1'
      mem_cache_value:
      tape_input: 'b'
    output:
      final_state: 'q3'
      mem_cache_value:
      tape_output: 'X'
      tape_displacement: R

  - params:
      initial_state: 'q3'
      mem_cache_value:
      tape_input: 'a'
    output:
      final_state: 'q3'
      mem_cache_value:
      tape_output: 'a'
      tape_displacement: R

  - params:
      initial_state: 'q3'
      mem_cache_value:
      tape_input: 'b'
    output:
      final_state: 'q3'
      mem_cache_value:
      tape_output: 'b'
      tape_displacement: R

  - params:
      initial_state: 'q3'
      mem_cache_value:
      tape_input: 'X'
    output:
      final_state: 'q3'
      mem_cache_value:
      tape_output: 'X'
      tape_displacement: R

  - params:
      initial_state: 'q3'
      mem_cache_value:
      tape_input: '_'
    output:
      final_state: 'q4'
      mem_cache_value:
      tape_output: 'b'
      tape_displacement: L

  - params:
      initial_state: 'q4'
      mem_cache_value:
      tape_input: 'a'
    output:
      final_state: 'q4'
      mem_cache_value:
      tape_output: 'a'
      tape_displacement: L

  - params:
      initial_state: 'q4'
      mem_cache_value:
      tape_input: 'b'
    output:
      final_state: 'q4'
      mem_cache_value:
      tape_output: 'b'
      tape_displacement: L

  - params:
      initial_state: 'q4'
      mem_cache_value:
      tape_input: 'X'
    output:
      final_state: 'q1'
      mem_cache_value:
      tape_output: 'X'
      tape_displacement: L

  - params:
      initial_state: 'q5'
      mem_cache_value:
      tape_input: 'X'
    output:
      final_state: 'q5'
      mem_cache_value:
      tape_output: '_'
      tape_displacement: R

  - params:
      initial_state: 'q5'
      mem_cache_value:
      tape_input: 'b'
    output:
      final_state: 'q6'
      mem_cache_value:
      tape_output: 'b'
      tape_displacement: S

  - params:
      initial_state: 'q5'
      mem_cache_value:
      tape_input: 'a'
    output:
      final_state: 'q6'
      mem_cache_value:
      tape_output: 'a'
      tape_displacement: S



# Cadenas a ser simuladas por su MT luego de parsearla y generarla
simulation_strings:
- aaaab
- abbaa
- bbbab
- jabba
- aabban
